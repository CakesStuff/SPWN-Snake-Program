static int MAX_ITER=80;
static Integer mandelbrot(float[] c){
  int n=0;
  float[] z={0,0};
  while(Math.sqrt(z[1]*z[1]+z[0]*z[0])<=2 && n<MAX_ITER){
    z=times(z,z);
    z[0]+=c[0];
    z[1]+=c[1];
    n++;
  }
  return n;
}

static float[] times(float[] z, float[] z1) {
  float[] res={0,0};
  res[0]=z[0]*z1[0]-z[1]*z1[1];
  res[1]=z[0]*z1[1]+z[1]*z1[0];
  return res;
}
static float width=9;
static float height=12;
for(float i=0;i<width;i++){
  for(float n=0;n<height;n++){
    float[] point=new float[]{-2 + (i / width) * (1 - -2),-1 + (n / height) * (1 - -1)};
    System.out.print(Arrays.toString(point));
    System.out.println(mandelbrot(point));
  }
}
