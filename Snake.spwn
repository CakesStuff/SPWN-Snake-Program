Extract obj_props
gs=import gamescene
counters=[]
width=9
height=9
max=counter(90i)
sel=counter(91i)
for i in ..height{
  for n in ..width{
    $.add(obj{
      X:15+n*30
      Y:15+i*30
      COLOR:@color(i*width+n)
    })
  }
}
impl @counter {
  my_func: (self,id){
    self.myid=id
    self.left=id-1
    if self.left<0{
      self.left+=(width*height)
    }
    self.left=@item(self.left)
    self.up=id-width
    if self.up<0{
      self.up+=(width*height)
    }
    self.up=@item(self.up)
    self.right=id+1
    if self.right>(width*height){
      self.right-=(width*height)
    }
    self.right=@item(self.right)
    self.down=id+width
    if self.down>(width*height){
      self.down-=(width*height)
    }
    self.down=@item(self.down)
  }
  updatem: (self){
    switch sel {
      case 0:
        updateb(self.left)
      case 1:
        updateb(self.up)
      case 2:
        updateb(self.right)
      case 3:
        updateb(self.down)
    }
  }
  updateb:(self,dire){
    if counter(dire)==0{
      counter(dire)+=max+1
      return false
    } else
    if counter(dire)==82{
      counter(dire)+=max-81
      return true
    }
    kill!
  }
  draw: (self){
    if self==0{
      @color(myid).set(0,0,0)
    }else if self==82{
      @color(myid).set(255,0,0)
    } else {
      @color(myid).set(0,255,255)
    }
  }
}
for i in ..(width*height){
  c = counter(@item(i))
  c.my_func(i)
  on(c.reaches(-1),!{c+=1})
  on(c.reaches(81),!{c+=1})
}
gs.button_a.on_triggered(!{sel-=1})
gs.button_b.on_triggered(!{sel+=1})
while_loop(() => true,(){
  dec=false
  for i in ..(width*height){
    if counter(@item(i))==max{
      dec=counter(@item(i)).updatem()
    }
  }
  if dec{max+=1} else {
    for i in ..(width*height){
      counter(@item(i))-=1
    }
  }
  for i in ..(width*height){
    counter(@item(i)).draw()
  }
})
